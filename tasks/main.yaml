---
- name: Resolve platform specific variables
  include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_distribution }}-{{ ansible_distribution_release }}.yml'
        - '{{ ansible_distribution }}.yml'
        - '{{ ansible_os_family }}.yml'
      skip: true
      paths:
        - '{{ role_path }}/vars'

- name: Check if app exists in {{ app_binary_dir }}...
  become: true
  stat:
    path: '{{ app_binary_dir }}'
  changed_when: false
  register: app_binary

- when: not app_binary.stat.exists
  block:
    - name: Download the archive file.
      become: true
      become_user: root
      get_url:
        url: '{{ app_url }}'
        dest: /tmp/{{ app_archive }}
        checksum: '{{ app_checksum }}'
        mode: 0644

    - name: mkdir {{ app_binary_dir }}
      become: true
      become_user: root
      file:
        path: '{{ app_binary_dir }}'
        state: directory
        mode: 0755

    - name: Unarchive /tmp/{{ app_archive }}
      command: 'gzip -d --keep -N /tmp/{{ app_archive }}'
      register: app_unarchive

    - name: Unarchive /tmp/{{ app_archive }}
      command: 'ls /tmp'
      register: app_unarchive

    - debug:
        msg: '{{ app_unarchive }}'

    - name: Copy file with owner and permissions
      copy:
        src: '/tmp/{{ bin_name }}'
        dest: '{{ app_install_exe }}'
        mode: a+x
  always:

    - name: Remove /tmp/{{ app_archive }}
      become: true
      become_user: root
      file:
        path: /tmp/{{ app_archive }}
        state: absent

- name: Make a link from {{ app_install_exe }} to {{ app_install_link }}
  file:
    src: '{{ app_install_exe }}'
    dest: '{{ app_install_link }}'
    state: link
  become: true
  become_user: root
